{"version":3,"file":"app/src_main_webapp_app_entities_device_device-details_vue.chunk.js","sources":["webpack://posdevicerestapi/./src/main/webapp/app/entities/device/device-details.component.ts","webpack://posdevicerestapi/./src/main/webapp/app/shared/data/data-utils.service.ts","webpack://posdevicerestapi/./src/main/webapp/app/entities/device/device-details.vue","webpack://posdevicerestapi/./src/main/webapp/app/entities/device/device-details.component.ts?1ca1","webpack://posdevicerestapi/./src/main/webapp/app/entities/device/device-details.vue?541a"],"sourcesContent":["import { Component, Inject } from 'vue-property-decorator';\n\nimport { mixins } from 'vue-class-component';\nimport JhiDataUtils from '@/shared/data/data-utils.service';\n\nimport { IDevice } from '@/shared/model/device.model';\nimport DeviceService from './device.service';\n\n@Component\nexport default class DeviceDetails extends mixins(JhiDataUtils) {\n  @Inject('deviceService') private deviceService: () => DeviceService;\n  public device: IDevice = {};\n\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      if (to.params.deviceId) {\n        vm.retrieveDevice(to.params.deviceId);\n      }\n    });\n  }\n\n  public retrieveDevice(deviceId) {\n    this.deviceService()\n      .find(deviceId)\n      .then(res => {\n        this.device = res;\n      });\n  }\n\n  public previousState() {\n    this.$router.go(-1);\n  }\n}\n","import { Component, Vue } from 'vue-property-decorator';\n\n/**\n * An utility service for data.\n */\n@Component\nexport default class JhiDataUtils extends Vue {\n  /**\n   * Method to abbreviate the text given\n   */\n  abbreviate(text, append = '...') {\n    if (text.length < 30) {\n      return text;\n    }\n    return text ? text.substring(0, 15) + append + text.slice(-10) : '';\n  }\n\n  /**\n   * Method to find the byte size of the string provides\n   */\n  byteSize(base64String) {\n    return this.formatAsBytes(this.size(base64String));\n  }\n\n  /**\n   * Method to open file\n   */\n  openFile(contentType, data) {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      // To support IE and Edge\n      const byteCharacters = atob(data);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      const blob = new Blob([byteArray], {\n        type: contentType,\n      });\n      window.navigator.msSaveOrOpenBlob(blob);\n    } else {\n      // Other browsers\n      const fileURL = `data:${contentType};base64,${data}`;\n      const win = window.open();\n      win.document.write(\n        '<iframe src=\"' +\n          fileURL +\n          '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>'\n      );\n    }\n  }\n\n  /**\n   * Method to convert the file to base64\n   */\n  toBase64(file, cb) {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = (e: any) => {\n      const base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n      cb(base64Data);\n    };\n  }\n\n  /**\n   * Method to clear the input\n   */\n  clearInputImage(entity, elementRef, field, fieldContentType, idInput) {\n    if (entity && field && fieldContentType) {\n      if (Object.prototype.hasOwnProperty.call(entity, field)) {\n        entity[field] = null;\n      }\n      if (Object.prototype.hasOwnProperty.call(entity, fieldContentType)) {\n        entity[fieldContentType] = null;\n      }\n      if (elementRef && idInput && elementRef.nativeElement.querySelector('#' + idInput)) {\n        elementRef.nativeElement.querySelector('#' + idInput).value = null;\n      }\n    }\n  }\n\n  endsWith(suffix, str) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n  }\n\n  paddingSize(value) {\n    if (this.endsWith('==', value)) {\n      return 2;\n    }\n    if (this.endsWith('=', value)) {\n      return 1;\n    }\n    return 0;\n  }\n\n  size(value) {\n    return (value.length / 4) * 3 - this.paddingSize(value);\n  }\n\n  formatAsBytes(size) {\n    return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n  }\n\n  setFileData(event, entity, field, isImage) {\n    if (event && event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      if (isImage && !/^image\\//.test(file.type)) {\n        return;\n      }\n      this.toBase64(file, base64Data => {\n        entity[field] = base64Data;\n        entity[`${field}ContentType`] = file.type;\n      });\n    }\n  }\n\n  /**\n   * Method to download file\n   */\n  downloadFile(contentType, data, fileName) {\n    const byteCharacters = atob(data);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], {\n      type: contentType,\n    });\n    const tempLink = document.createElement('a');\n    tempLink.href = window.URL.createObjectURL(blob);\n    tempLink.download = fileName;\n    tempLink.target = '_blank';\n    tempLink.click();\n  }\n\n  /**\n   * Method to parse header links\n   */\n  parseLinks(header) {\n    const links = {};\n\n    if (header === null || header.indexOf(',') === -1) {\n      return links;\n    }\n    // Split parts by comma\n    const parts = header.split(',');\n\n    // Parse each part into a named link\n    parts.forEach(p => {\n      if (p.indexOf('>;') === -1) {\n        return;\n      }\n      const section = p.split('>;');\n      const url = section[0].replace(/<(.*)/, '$1').trim();\n      const queryString = { page: null };\n      url.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), ($0, $1, $2, $3) => {\n        queryString[$1] = $3;\n      });\n      let page = queryString.page;\n      if (typeof page === 'string') {\n        page = parseInt(page, 10);\n      }\n      const name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n      links[name] = page;\n    });\n    return links;\n  }\n}\n","import { render, staticRenderFns } from \"./device-details.vue?vue&type=template&id=1ba9a6c9&\"\nimport script from \"./device-details.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./device-details.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/chrisphyne/Documents/JhipsterApps/archive/pos-device-monolith/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1ba9a6c9')) {\n      api.createRecord('1ba9a6c9', component.options)\n    } else {\n      api.reload('1ba9a6c9', component.options)\n    }\n    module.hot.accept(\"./device-details.vue?vue&type=template&id=1ba9a6c9&\", function () {\n      api.rerender('1ba9a6c9', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/entities/device/device-details.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./device-details.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./device-details.component.ts?vue&type=script&lang=ts&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n    _c(\"div\", { staticClass: \"col-8\" }, [\n      _vm.device\n        ? _c(\n            \"div\",\n            [\n              _c(\n                \"h2\",\n                {\n                  staticClass: \"jh-entity-heading\",\n                  attrs: { \"data-cy\": \"deviceDetailsHeading\" },\n                },\n                [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"posdevicerestapiApp.device.detail.title\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Device\")]\n                  ),\n                  _vm._v(\" \" + _vm._s(_vm.device.id) + \"\\n      \"),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"dl\", { staticClass: \"row jh-entity-details\" }, [\n                _c(\"dt\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"posdevicerestapiApp.device.name\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Name\")]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dd\", [_c(\"span\", [_vm._v(_vm._s(_vm.device.name))])]),\n                _vm._v(\" \"),\n                _c(\"dt\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"posdevicerestapiApp.device.description\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Description\")]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dd\", [\n                  _c(\"span\", [_vm._v(_vm._s(_vm.device.description))]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dt\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"posdevicerestapiApp.device.price\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Price\")]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dd\", [_c(\"span\", [_vm._v(_vm._s(_vm.device.price))])]),\n                _vm._v(\" \"),\n                _c(\"dt\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"posdevicerestapiApp.device.deviceSize\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Device Size\")]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dd\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\n                            \"posdevicerestapiApp.Size.\" + _vm.device.deviceSize\n                          )\n                        ),\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.device.deviceSize))]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dt\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"posdevicerestapiApp.device.image\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Image\")]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dd\", [\n                  _vm.device.image\n                    ? _c(\"div\", [\n                        _c(\n                          \"a\",\n                          {\n                            on: {\n                              click: function ($event) {\n                                return _vm.openFile(\n                                  _vm.device.imageContentType,\n                                  _vm.device.image\n                                )\n                              },\n                            },\n                          },\n                          [\n                            _c(\"img\", {\n                              staticStyle: { \"max-width\": \"100%\" },\n                              attrs: {\n                                src:\n                                  \"data:\" +\n                                  _vm.device.imageContentType +\n                                  \";base64,\" +\n                                  _vm.device.image,\n                                alt: \"device image\",\n                              },\n                            }),\n                          ]\n                        ),\n                        _vm._v(\n                          \"\\n            \" +\n                            _vm._s(_vm.device.imageContentType) +\n                            \", \" +\n                            _vm._s(_vm.byteSize(_vm.device.image)) +\n                            \"\\n          \"\n                        ),\n                      ])\n                    : _vm._e(),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dt\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"posdevicerestapiApp.device.deviceModel\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Device Model\")]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"dd\", [\n                  _vm.device.deviceModel\n                    ? _c(\n                        \"div\",\n                        [\n                          _c(\n                            \"router-link\",\n                            {\n                              attrs: {\n                                to: {\n                                  name: \"DeviceModelView\",\n                                  params: {\n                                    deviceModelId: _vm.device.deviceModel.id,\n                                  },\n                                },\n                              },\n                            },\n                            [_vm._v(_vm._s(_vm.device.deviceModel.name))]\n                          ),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info\",\n                  attrs: {\n                    type: \"submit\",\n                    \"data-cy\": \"entityDetailsBackButton\",\n                  },\n                  on: {\n                    click: function ($event) {\n                      $event.preventDefault()\n                      return _vm.previousState()\n                    },\n                  },\n                },\n                [\n                  _c(\"font-awesome-icon\", { attrs: { icon: \"arrow-left\" } }),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(_vm.$t(\"entity.action.back\")),\n                      },\n                    },\n                    [_vm._v(\" Back\")]\n                  ),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.device.id\n                ? _c(\"router-link\", {\n                    attrs: {\n                      to: {\n                        name: \"DeviceEdit\",\n                        params: { deviceId: _vm.device.id },\n                      },\n                      custom: \"\",\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function (ref) {\n                            var navigate = ref.navigate\n                            return [\n                              _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-primary\",\n                                  on: { click: navigate },\n                                },\n                                [\n                                  _c(\"font-awesome-icon\", {\n                                    attrs: { icon: \"pencil-alt\" },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"span\",\n                                    {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\"entity.action.edit\")\n                                        ),\n                                      },\n                                    },\n                                    [_vm._v(\" Edit\")]\n                                  ),\n                                ],\n                                1\n                              ),\n                            ]\n                          },\n                        },\n                      ],\n                      null,\n                      false,\n                      2496563092\n                    ),\n                  })\n                : _vm._e(),\n            ],\n            1\n          )\n        : _vm._e(),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AAEA;;AAqBA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArBA;AAAA;;AAAA;AADA;AADA;AACA;AAuBA;AAAA;AAvBA;;;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAEA;;AAEA;AAEA;AAAA;AAAA;;AAkKA;AAjKA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjKA;AADA;AACA;AAkKA;AAAA;AAlKA;;;A;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;;;ACtsourceRoot":""}