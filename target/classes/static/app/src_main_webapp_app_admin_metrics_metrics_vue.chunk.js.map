{"version":3,"file":"app/src_main_webapp_app_admin_metrics_metrics_vue.chunk.js","sources":["webpack://posdevicerestapi/./src/main/webapp/app/admin/metrics/metrics-modal.component.ts","webpack://posdevicerestapi/./src/main/webapp/app/admin/metrics/metrics.component.ts","webpack://posdevicerestapi/./src/main/webapp/app/admin/metrics/metrics-modal.vue","webpack://posdevicerestapi/./src/main/webapp/app/admin/metrics/metrics.vue","webpack://posdevicerestapi/./src/main/webapp/app/admin/metrics/metrics-modal.component.ts?7f33","webpack://posdevicerestapi/./src/main/webapp/app/admin/metrics/metrics.component.ts?92fc","webpack://posdevicerestapi/./src/main/webapp/app/admin/metrics/metrics-modal.vue?4985","webpack://posdevicerestapi/./src/main/webapp/app/admin/metrics/metrics.vue?552a"],"sourcesContent":["import { Component, Vue, Prop } from 'vue-property-decorator';\nimport Vue2Filters from 'vue2-filters';\n\n@Component({\n  mixins: [Vue2Filters.mixin],\n})\nexport default class JhiMetricsModal extends Vue {\n  @Prop()\n  threadDump!: any;\n\n  public threadDumpFilter: any = null;\n\n  get threadDumpData(): any {\n    const data = {\n      threadDumpAll: 0,\n      threadDumpBlocked: 0,\n      threadDumpRunnable: 0,\n      threadDumpTimedWaiting: 0,\n      threadDumpWaiting: 0,\n    };\n    if (this.threadDump) {\n      this.threadDump.forEach(value => {\n        if (value.threadState === 'RUNNABLE') {\n          data.threadDumpRunnable += 1;\n        } else if (value.threadState === 'WAITING') {\n          data.threadDumpWaiting += 1;\n        } else if (value.threadState === 'TIMED_WAITING') {\n          data.threadDumpTimedWaiting += 1;\n        } else if (value.threadState === 'BLOCKED') {\n          data.threadDumpBlocked += 1;\n        }\n      });\n      data.threadDumpAll = data.threadDumpRunnable + data.threadDumpWaiting + data.threadDumpTimedWaiting + data.threadDumpBlocked;\n    }\n    return data;\n  }\n\n  public getBadgeClass(threadState: string): string {\n    if (threadState === 'RUNNABLE') {\n      return 'badge-success';\n    } else if (threadState === 'WAITING') {\n      return 'badge-info';\n    } else if (threadState === 'TIMED_WAITING') {\n      return 'badge-warning';\n    } else if (threadState === 'BLOCKED') {\n      return 'badge-danger';\n    }\n  }\n}\n","import numeral from 'numeral';\nimport JhiMetricsModal from './metrics-modal.vue';\nimport MetricsService from './metrics.service';\nimport { Component, Vue, Inject } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    'metrics-modal': JhiMetricsModal,\n  },\n})\nexport default class JhiMetrics extends Vue {\n  public metrics: any = {};\n  public threadData: any = null;\n  public threadStats: any = {};\n  public updatingMetrics = true;\n  @Inject('metricsService')\n  private metricsService: () => MetricsService;\n\n  public mounted(): void {\n    this.refresh();\n  }\n\n  public refresh(): void {\n    this.metricsService()\n      .getMetrics()\n      .then(resultsMetrics => {\n        this.metrics = resultsMetrics.data;\n        this.metricsService()\n          .retrieveThreadDump()\n          .then(res => {\n            this.updatingMetrics = true;\n            this.threadData = res.data.threads;\n\n            this.threadStats = {\n              threadDumpRunnable: 0,\n              threadDumpWaiting: 0,\n              threadDumpTimedWaiting: 0,\n              threadDumpBlocked: 0,\n              threadDumpAll: 0,\n            };\n\n            this.threadData.forEach(value => {\n              if (value.threadState === 'RUNNABLE') {\n                this.threadStats.threadDumpRunnable += 1;\n              } else if (value.threadState === 'WAITING') {\n                this.threadStats.threadDumpWaiting += 1;\n              } else if (value.threadState === 'TIMED_WAITING') {\n                this.threadStats.threadDumpTimedWaiting += 1;\n              } else if (value.threadState === 'BLOCKED') {\n                this.threadStats.threadDumpBlocked += 1;\n              }\n            });\n\n            this.threadStats.threadDumpAll =\n              this.threadStats.threadDumpRunnable +\n              this.threadStats.threadDumpWaiting +\n              this.threadStats.threadDumpTimedWaiting +\n              this.threadStats.threadDumpBlocked;\n\n            this.updatingMetrics = false;\n          })\n          .catch(() => {\n            this.updatingMetrics = true;\n          });\n      })\n      .catch(() => {\n        this.updatingMetrics = true;\n      });\n  }\n\n  openModal(): void {\n    if ((<any>this.$refs.metricsModal).show) {\n      (<any>this.$refs.metricsModal).show();\n    }\n  }\n\n  filterNaN(input: any): any {\n    if (isNaN(input)) {\n      return 0;\n    }\n    return input;\n  }\n\n  formatNumber1(value: any): any {\n    return numeral(value).format('0,0');\n  }\n\n  formatNumber2(value: any): any {\n    return numeral(value).format('0,00');\n  }\n\n  convertMillisecondsToDuration(ms) {\n    const times = {\n      year: 31557600000,\n      month: 2629746000,\n      day: 86400000,\n      hour: 3600000,\n      minute: 60000,\n      second: 1000,\n    };\n    let time_string = '';\n    let plural = '';\n    for (const key in times) {\n      if (Math.floor(ms / times[key]) > 0) {\n        if (Math.floor(ms / times[key]) > 1) {\n          plural = 's';\n        } else {\n          plural = '';\n        }\n        time_string += Math.floor(ms / times[key]).toString() + ' ' + key.toString() + plural + ' ';\n        ms = ms - times[key] * Math.floor(ms / times[key]);\n      }\n    }\n    return time_string;\n  }\n\n  public isObjectExisting(metrics: any, key: string): boolean {\n    return metrics && metrics[key];\n  }\n\n  public isObjectExistingAndNotEmpty(metrics: any, key: string): boolean {\n    return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\n  }\n}\n","import { render, staticRenderFns } from \"./metrics-modal.vue?vue&type=template&id=dc79ea98&\"\nimport script from \"./metrics-modal.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./metrics-modal.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/chrisphyne/Documents/JhipsterApps/archive/pos-device-monolith/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('dc79ea98')) {\n      api.createRecord('dc79ea98', component.options)\n    } else {\n      api.reload('dc79ea98', component.options)\n    }\n    module.hot.accept(\"./metrics-modal.vue?vue&type=template&id=dc79ea98&\", function () {\n      api.rerender('dc79ea98', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/admin/metrics/metrics-modal.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./metrics.vue?vue&type=template&id=55e5cdd8&\"\nimport script from \"./metrics.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./metrics.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/chrisphyne/Documents/JhipsterApps/archive/pos-device-monolith/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('55e5cdd8')) {\n      api.createRecord('55e5cdd8', component.options)\n    } else {\n      api.reload('55e5cdd8', component.options)\n    }\n    module.hot.accept(\"./metrics.vue?vue&type=template&id=55e5cdd8&\", function () {\n      api.rerender('55e5cdd8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/admin/metrics/metrics.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./metrics-modal.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./metrics-modal.component.ts?vue&type=script&lang=ts&\"","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./metrics.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./metrics.component.ts?vue&type=script&lang=ts&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"modal-body\" },\n    [\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-primary\",\n          on: {\n            click: function ($event) {\n              _vm.threadDumpFilter = \"\"\n            },\n          },\n        },\n        [\n          _vm._v(\"All \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpAll)),\n          ]),\n        ]\n      ),\n      _vm._v(\" \\n  \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-success\",\n          on: {\n            click: function ($event) {\n              _vm.threadDumpFilter = \"RUNNABLE\"\n            },\n          },\n        },\n        [\n          _vm._v(\"Runnable \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpRunnable)),\n          ]),\n        ]\n      ),\n      _vm._v(\" \\n  \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-info\",\n          on: {\n            click: function ($event) {\n              _vm.threadDumpFilter = \"WAITING\"\n            },\n          },\n        },\n        [\n          _vm._v(\"Waiting \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpWaiting)),\n          ]),\n        ]\n      ),\n      _vm._v(\" \\n  \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-warning\",\n          on: {\n            click: function ($event) {\n              _vm.threadDumpFilter = \"TIMED_WAITING\"\n            },\n          },\n        },\n        [\n          _vm._v(\"Timed Waiting \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpTimedWaiting)),\n          ]),\n        ]\n      ),\n      _vm._v(\" \\n  \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-danger\",\n          on: {\n            click: function ($event) {\n              _vm.threadDumpFilter = \"BLOCKED\"\n            },\n          },\n        },\n        [\n          _vm._v(\"Blocked \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpBlocked)),\n          ]),\n        ]\n      ),\n      _vm._v(\" \\n  \"),\n      _c(\"div\", { staticClass: \"mt-2\" }, [_vm._v(\" \")]),\n      _vm._v(\"\\n  Filter\\n  \"),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.threadDumpFilter,\n            expression: \"threadDumpFilter\",\n          },\n        ],\n        staticClass: \"form-control\",\n        attrs: { type: \"text\" },\n        domProps: { value: _vm.threadDumpFilter },\n        on: {\n          input: function ($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.threadDumpFilter = $event.target.value\n          },\n        },\n      }),\n      _vm._v(\" \"),\n      _vm._l(\n        _vm.filterBy(_vm.threadDump, _vm.threadDumpFilter),\n        function (entry, key) {\n          return _c(\"div\", { key: key, staticClass: \"pad\" }, [\n            _c(\"h6\", [\n              _c(\n                \"span\",\n                {\n                  staticClass: \"badge\",\n                  class: _vm.getBadgeClass(entry.threadState),\n                },\n                [_vm._v(_vm._s(entry.threadState))]\n              ),\n              _vm._v(\n                \" \" +\n                  _vm._s(entry.threadName) +\n                  \" (ID \" +\n                  _vm._s(entry.threadId) +\n                  \")\\n      \"\n              ),\n              _c(\n                \"a\",\n                {\n                  attrs: { href: \"javascript:void(0);\" },\n                  on: {\n                    click: function ($event) {\n                      entry.show = !entry.show\n                    },\n                  },\n                },\n                [\n                  _c(\n                    \"span\",\n                    {\n                      attrs: { hidden: entry.show },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.dump.show\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Show StackTrace\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    {\n                      attrs: { hidden: !entry.show },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.dump.hide\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Hide StackTrace\")]\n                  ),\n                ]\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"card\", attrs: { hidden: !entry.show } }, [\n              _c(\n                \"div\",\n                { staticClass: \"card-body\" },\n                _vm._l(entry.stackTrace, function (st, key) {\n                  return _c(\"div\", { key: key, staticClass: \"break\" }, [\n                    _c(\"samp\", [\n                      _vm._v(\n                        _vm._s(st.className) + \".\" + _vm._s(st.methodName) + \"(\"\n                      ),\n                      _c(\"code\", [\n                        _vm._v(\n                          _vm._s(st.fileName) + \":\" + _vm._s(st.lineNumber)\n                        ),\n                      ]),\n                      _vm._v(\")\"),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"mt-1\" }),\n                  ])\n                }),\n                0\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"table\",\n              {\n                staticClass: \"table table-sm table-responsive\",\n                attrs: { \"aria-describedby\": \"Metrics\" },\n              },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.jvm.threads.dump.blockedtime\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Blocked Time\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.jvm.threads.dump.blockedcount\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Blocked Count\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.jvm.threads.dump.waitedtime\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Waited Time\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.jvm.threads.dump.waitedcount\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Waited Count\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.jvm.threads.dump.lockname\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Lock Name\")]\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"tbody\", [\n                  _c(\"tr\", [\n                    _c(\"td\", [_vm._v(_vm._s(entry.blockedTime))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(entry.blockedCount))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(entry.waitedTime))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(entry.waitedCount))]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"td\",\n                      {\n                        staticClass: \"thread-dump-modal-lock\",\n                        attrs: { title: entry.lockName },\n                      },\n                      [_c(\"code\", [_vm._v(_vm._s(entry.lockName))])]\n                    ),\n                  ]),\n                ]),\n              ]\n            ),\n          ])\n        }\n      ),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"h2\", [\n        _c(\n          \"span\",\n          {\n            attrs: {\n              id: \"metrics-page-heading\",\n              \"data-cy\": \"metricsPageHeading\",\n            },\n            domProps: { textContent: _vm._s(_vm.$t(\"metrics.title\")) },\n          },\n          [_vm._v(\"Application Metrics\")]\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn btn-primary float-right\",\n            on: {\n              click: function ($event) {\n                return _vm.refresh()\n              },\n            },\n          },\n          [\n            _c(\"font-awesome-icon\", { attrs: { icon: \"sync\" } }),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              {\n                domProps: {\n                  textContent: _vm._s(_vm.$t(\"metrics['refresh.button']\")),\n                },\n              },\n              [_vm._v(\"Refresh\")]\n            ),\n          ],\n          1\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { domProps: { textContent: _vm._s(_vm.$t(\"metrics.jvm.title\")) } },\n        [_vm._v(\"JVM Metrics\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics\n        ? _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-4\" }, [\n              _c(\n                \"h4\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"metrics.jvm.memory.title\")),\n                  },\n                },\n                [_vm._v(\"Memory\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                _vm._l(_vm.metrics.jvm, function (entry, key) {\n                  return _c(\n                    \"div\",\n                    { key: key },\n                    [\n                      entry.max !== -1\n                        ? _c(\"span\", [\n                            _c(\"span\", [_vm._v(_vm._s(key))]),\n                            _vm._v(\n                              \" (\" +\n                                _vm._s(\n                                  _vm.formatNumber1(entry.used / 1048576)\n                                ) +\n                                \"M / \" +\n                                _vm._s(_vm.formatNumber1(entry.max / 1048576)) +\n                                \"M)\\n          \"\n                            ),\n                          ])\n                        : _c(\"span\", [\n                            _c(\"span\", [_vm._v(_vm._s(key))]),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.formatNumber1(entry.used / 1048576)\n                                ) +\n                                \"M\\n          \"\n                            ),\n                          ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", [\n                        _vm._v(\n                          \"Committed : \" +\n                            _vm._s(\n                              _vm.formatNumber1(entry.committed / 1048576)\n                            ) +\n                            \"M\"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      entry.max !== -1\n                        ? _c(\n                            \"b-progress\",\n                            {\n                              attrs: {\n                                variant: \"success\",\n                                animated: \"\",\n                                max: entry.max,\n                                striped: \"\",\n                              },\n                            },\n                            [\n                              _c(\"b-progress-bar\", {\n                                attrs: {\n                                  value: entry.used,\n                                  label:\n                                    _vm.formatNumber1(\n                                      (entry.used * 100) / entry.max\n                                    ) + \"%\",\n                                },\n                              }),\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                    ],\n                    1\n                  )\n                }),\n                0\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-md-4\" },\n              [\n                _c(\n                  \"h4\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"metrics.jvm.threads.title\")),\n                    },\n                  },\n                  [_vm._v(\"Threads\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.runnable\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Runnable\")]\n                  ),\n                  _vm._v(\" \" + _vm._s(_vm.threadStats.threadDumpRunnable)),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  {\n                    attrs: {\n                      variant: \"success\",\n                      max: _vm.threadStats.threadDumpAll,\n                      striped: \"\",\n                    },\n                  },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value: _vm.threadStats.threadDumpRunnable,\n                        label:\n                          _vm.formatNumber1(\n                            (_vm.threadStats.threadDumpRunnable * 100) /\n                              _vm.threadStats.threadDumpAll\n                          ) + \"%\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.timedwaiting\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Timed Waiting\")]\n                  ),\n                  _vm._v(\n                    \" (\" + _vm._s(_vm.threadStats.threadDumpTimedWaiting) + \")\"\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  {\n                    attrs: {\n                      variant: \"success\",\n                      max: _vm.threadStats.threadDumpAll,\n                      striped: \"\",\n                    },\n                  },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value: _vm.threadStats.threadDumpTimedWaiting,\n                        label:\n                          _vm.formatNumber1(\n                            (_vm.threadStats.threadDumpTimedWaiting * 100) /\n                              _vm.threadStats.threadDumpAll\n                          ) + \"%\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.waiting\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Waiting\")]\n                  ),\n                  _vm._v(\n                    \" (\" + _vm._s(_vm.threadStats.threadDumpWaiting) + \")\"\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  {\n                    attrs: {\n                      variant: \"success\",\n                      max: _vm.threadStats.threadDumpAll,\n                      striped: \"\",\n                    },\n                  },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value: _vm.threadStats.threadDumpWaiting,\n                        label:\n                          _vm.formatNumber1(\n                            (_vm.threadStats.threadDumpWaiting * 100) /\n                              _vm.threadStats.threadDumpAll\n                          ) + \"%\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.blocked\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Blocked\")]\n                  ),\n                  _vm._v(\n                    \" (\" + _vm._s(_vm.threadStats.threadDumpBlocked) + \")\"\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  {\n                    attrs: {\n                      variant: \"success\",\n                      max: _vm.threadStats.threadDumpAll,\n                      striped: \"\",\n                    },\n                  },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value: _vm.threadStats.threadDumpBlocked,\n                        label:\n                          _vm.formatNumber1(\n                            (_vm.threadStats.threadDumpBlocked * 100) /\n                              _vm.threadStats.threadDumpAll\n                          ) + \"%\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _vm._v(\n                    \"Total: \" +\n                      _vm._s(_vm.threadStats.threadDumpAll) +\n                      \"\\n        \"\n                  ),\n                  _c(\n                    \"a\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-modal\",\n                          rawName: \"v-b-modal.metricsModal\",\n                          modifiers: { metricsModal: true },\n                        },\n                      ],\n                      staticClass: \"hand\",\n                      attrs: {\n                        \"data-toggle\": \"modal\",\n                        \"data-target\": \"#threadDump\",\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.openModal()\n                        },\n                      },\n                    },\n                    [_c(\"font-awesome-icon\", { attrs: { icon: \"eye\" } })],\n                    1\n                  ),\n                ]),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-md-4\" },\n              [\n                _c(\"h4\", [_vm._v(\"System\")]),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-4\" }, [\n                        _vm._v(\"Uptime\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-8 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.convertMillisecondsToDuration(\n                              _vm.metrics.processMetrics[\"process.uptime\"]\n                            )\n                          )\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-4\" }, [\n                        _vm._v(\"Start time\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-8 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"formatMillis\")(\n                              _vm.metrics.processMetrics[\"process.start.time\"]\n                            )\n                          )\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"Process CPU usage\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              100 *\n                                _vm.metrics.processMetrics[\"process.cpu.usage\"]\n                            )\n                          ) + \" %\"\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  { attrs: { variant: \"success\", max: 100, striped: \"\" } },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value:\n                          100 * _vm.metrics.processMetrics[\"process.cpu.usage\"],\n                        label:\n                          _vm.formatNumber1(\n                            100 *\n                              _vm.metrics.processMetrics[\"process.cpu.usage\"]\n                          ) + \"%\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"System CPU usage\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              100 *\n                                _vm.metrics.processMetrics[\"system.cpu.usage\"]\n                            )\n                          ) + \" %\"\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  { attrs: { variant: \"success\", max: 100, striped: \"\" } },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value:\n                          100 * _vm.metrics.processMetrics[\"system.cpu.usage\"],\n                        label:\n                          _vm.formatNumber1(\n                            100 * _vm.metrics.processMetrics[\"system.cpu.usage\"]\n                          ) + \"%\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"System CPU count\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(_vm.metrics.processMetrics[\"system.cpu.count\"])\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"System 1m Load average\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.processMetrics[\n                                \"system.load.average.1m\"\n                              ]\n                            )\n                          )\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"Process files max\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber1(\n                              _vm.metrics.processMetrics[\"process.files.max\"]\n                            )\n                          )\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"Process files open\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber1(\n                              _vm.metrics.processMetrics[\"process.files.open\"]\n                            )\n                          )\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n              ],\n              1\n            ),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { domProps: { textContent: _vm._s(_vm.$t(\"metrics.jvm.gc.title\")) } },\n        [_vm._v(\"Garbage collections\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics &&\n      _vm.isObjectExisting(_vm.metrics, \"garbageCollector\")\n        ? _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-4\" }, [\n              _c(\n                \"div\",\n                [\n                  _c(\"span\", [\n                    _vm._v(\n                      \"\\n          GC Live Data Size/GC Max Data Size (\" +\n                        _vm._s(\n                          _vm.formatNumber1(\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.live.data.size\"\n                            ] / 1048576\n                          )\n                        ) +\n                        \"M /\\n          \" +\n                        _vm._s(\n                          _vm.formatNumber1(\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.max.data.size\"\n                            ] / 1048576\n                          )\n                        ) +\n                        \"M)\\n        \"\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-progress\",\n                    {\n                      attrs: {\n                        variant: \"success\",\n                        max:\n                          _vm.metrics.garbageCollector[\"jvm.gc.max.data.size\"],\n                        striped: \"\",\n                      },\n                    },\n                    [\n                      _c(\"b-progress-bar\", {\n                        attrs: {\n                          value:\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.live.data.size\"\n                            ],\n                          label:\n                            _vm.formatNumber2(\n                              (100 *\n                                _vm.metrics.garbageCollector[\n                                  \"jvm.gc.live.data.size\"\n                                ]) /\n                                _vm.metrics.garbageCollector[\n                                  \"jvm.gc.max.data.size\"\n                                ]\n                            ) + \"%\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-md-4\" }, [\n              _c(\n                \"div\",\n                [\n                  _c(\"span\", [\n                    _vm._v(\n                      \"\\n          GC Memory Promoted/GC Memory Allocated (\" +\n                        _vm._s(\n                          _vm.formatNumber1(\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.memory.promoted\"\n                            ] / 1048576\n                          )\n                        ) +\n                        \"M /\\n          \" +\n                        _vm._s(\n                          _vm.formatNumber1(\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.memory.allocated\"\n                            ] / 1048576\n                          )\n                        ) +\n                        \"M)\\n        \"\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-progress\",\n                    {\n                      attrs: {\n                        variant: \"success\",\n                        max:\n                          _vm.metrics.garbageCollector[\n                            \"jvm.gc.memory.allocated\"\n                          ],\n                        striped: \"\",\n                      },\n                    },\n                    [\n                      _c(\"b-progress-bar\", {\n                        attrs: {\n                          value:\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.memory.promoted\"\n                            ],\n                          label:\n                            _vm.formatNumber2(\n                              (100 *\n                                _vm.metrics.garbageCollector[\n                                  \"jvm.gc.memory.promoted\"\n                                ]) /\n                                _vm.metrics.garbageCollector[\n                                  \"jvm.gc.memory.allocated\"\n                                ]\n                            ) + \"%\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-md-4\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-md-9\" }, [\n                  _vm._v(\"Classes loaded\"),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                  _vm._v(_vm._s(_vm.metrics.garbageCollector.classesLoaded)),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-md-9\" }, [\n                  _vm._v(\"Classes unloaded\"),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                  _vm._v(_vm._s(_vm.metrics.garbageCollector.classesUnloaded)),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"table-responsive\" }, [\n              _c(\n                \"table\",\n                {\n                  staticClass: \"table table-striped\",\n                  attrs: { \"aria-describedby\": \"Jvm gc\" },\n                },\n                [\n                  _c(\"thead\", [\n                    _c(\"tr\", [\n                      _c(\"th\", { attrs: { scope: \"col\" } }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"th\",\n                        {\n                          staticClass: \"text-right\",\n                          attrs: { scope: \"col\" },\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.servicesstats.table.count\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"Count\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"th\",\n                        {\n                          staticClass: \"text-right\",\n                          attrs: { scope: \"col\" },\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.servicesstats.table.mean\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"Mean\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"th\",\n                        {\n                          staticClass: \"text-right\",\n                          attrs: { scope: \"col\" },\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.servicesstats.table.min\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"Min\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"th\",\n                        {\n                          staticClass: \"text-right\",\n                          attrs: { scope: \"col\" },\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.servicesstats.table.p50\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"p50\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"th\",\n                        {\n                          staticClass: \"text-right\",\n                          attrs: { scope: \"col\" },\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.servicesstats.table.p75\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"p75\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"th\",\n                        {\n                          staticClass: \"text-right\",\n                          attrs: { scope: \"col\" },\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.servicesstats.table.p95\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"p95\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"th\",\n                        {\n                          staticClass: \"text-right\",\n                          attrs: { scope: \"col\" },\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.servicesstats.table.p99\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"p99\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"th\",\n                        {\n                          staticClass: \"text-right\",\n                          attrs: { scope: \"col\" },\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.servicesstats.table.max\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"Max\")]\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tbody\", [\n                    _c(\"tr\", [\n                      _c(\"td\", [_vm._v(\"jvm.gc.pause\")]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.metrics.garbageCollector[\"jvm.gc.pause\"].count\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.garbageCollector[\"jvm.gc.pause\"].mean\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\n                                \"0.0\"\n                              ]\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\n                                \"0.5\"\n                              ]\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\n                                \"0.75\"\n                              ]\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\n                                \"0.95\"\n                              ]\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\n                                \"0.99\"\n                              ]\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.garbageCollector[\"jvm.gc.pause\"].max\n                            )\n                          )\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                ]\n              ),\n            ]),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { domProps: { textContent: _vm._s(_vm.$t(\"metrics.jvm.http.title\")) } },\n        [_vm._v(\"HTTP requests (time in millisecond)\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics &&\n      _vm.isObjectExisting(_vm.metrics, \"http.server.requests\")\n        ? _c(\n            \"table\",\n            {\n              staticClass: \"table table-striped\",\n              attrs: { \"aria-describedby\": \"Jvm http\" },\n            },\n            [\n              _c(\"thead\", [\n                _c(\"tr\", [\n                  _c(\n                    \"th\",\n                    {\n                      attrs: { scope: \"col\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.http.table.code\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Code\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      attrs: { scope: \"col\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.http.table.count\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Count\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { scope: \"col\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.http.table.mean\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Mean\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { scope: \"col\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.http.table.max\")\n                        ),\n                      },\n                    },\n                    [_vm._v(\"Max\")]\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"tbody\",\n                _vm._l(\n                  _vm.metrics[\"http.server.requests\"][\"percode\"],\n                  function (entry, key) {\n                    return _c(\"tr\", { key: key }, [\n                      _c(\"td\", [_vm._v(_vm._s(key))]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"td\",\n                        [\n                          _c(\n                            \"b-progress\",\n                            {\n                              attrs: {\n                                variant: \"success\",\n                                animated: \"\",\n                                max:\n                                  _vm.metrics[\"http.server.requests\"][\"all\"]\n                                    .count,\n                                striped: \"\",\n                              },\n                            },\n                            [\n                              _c(\"b-progress-bar\", {\n                                attrs: {\n                                  value: entry.count,\n                                  label: _vm.formatNumber1(entry.count),\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(\n                              _vm.formatNumber2(_vm.filterNaN(entry.mean))\n                            ) +\n                            \"\\n        \"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(_vm._s(_vm.formatNumber2(entry.max))),\n                      ]),\n                    ])\n                  }\n                ),\n                0\n              ),\n            ]\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"h3\", [_vm._v(\"Endpoints requests (time in millisecond)\")]),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics\n        ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\n              \"table\",\n              {\n                staticClass: \"table table-striped\",\n                attrs: { \"aria-describedby\": \"Endpoint\" },\n              },\n              [\n                _vm._m(0),\n                _vm._v(\" \"),\n                _c(\n                  \"tbody\",\n                  [\n                    _vm._l(_vm.metrics.services, function (entry, entryKey) {\n                      return _vm._l(entry, function (method, methodKey) {\n                        return _c(\"tr\", { key: entryKey + \"-\" + methodKey }, [\n                          _c(\"td\", [_vm._v(_vm._s(methodKey))]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [_vm._v(_vm._s(entryKey))]),\n                          _vm._v(\" \"),\n                          _c(\"td\", { staticClass: \"text-right\" }, [\n                            _vm._v(_vm._s(method.count)),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", { staticClass: \"text-right\" }, [\n                            _vm._v(_vm._s(_vm.formatNumber2(method.mean))),\n                          ]),\n                        ])\n                      })\n                    }),\n                  ],\n                  2\n                ),\n              ]\n            ),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { domProps: { textContent: _vm._s(_vm.$t(\"metrics.cache.title\")) } },\n        [_vm._v(\"Cache statistics\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics && _vm.isObjectExisting(_vm.metrics, \"cache\")\n        ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\n              \"table\",\n              {\n                staticClass: \"table table-striped\",\n                attrs: { \"aria-describedby\": \"Cache\" },\n              },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.cache.cachename\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Cache name\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          scope: \"col\",\n                          \"data-translate\": \"metrics.cache.hits\",\n                        },\n                      },\n                      [_vm._v(\"Cache Hits\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          scope: \"col\",\n                          \"data-translate\": \"metrics.cache.misses\",\n                        },\n                      },\n                      [_vm._v(\"Cache Misses\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          scope: \"col\",\n                          \"data-translate\": \"metrics.cache.gets\",\n                        },\n                      },\n                      [_vm._v(\"Cache Gets\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          scope: \"col\",\n                          \"data-translate\": \"metrics.cache.puts\",\n                        },\n                      },\n                      [_vm._v(\"Cache Puts\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          scope: \"col\",\n                          \"data-translate\": \"metrics.cache.removals\",\n                        },\n                      },\n                      [_vm._v(\"Cache Removals\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          scope: \"col\",\n                          \"data-translate\": \"metrics.cache.evictions\",\n                        },\n                      },\n                      [_vm._v(\"Cache Evictions\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          scope: \"col\",\n                          \"data-translate\": \"metrics.cache.hitPercent\",\n                        },\n                      },\n                      [_vm._v(\"Cache Hit %\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          scope: \"col\",\n                          \"data-translate\": \"metrics.cache.missPercent\",\n                        },\n                      },\n                      [_vm._v(\"Cache Miss %\")]\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"tbody\",\n                  _vm._l(_vm.metrics.cache, function (entry, key) {\n                    return _c(\"tr\", { key: key }, [\n                      _c(\"td\", [_vm._v(_vm._s(key))]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(_vm._s(entry[\"cache.gets.hit\"])),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(_vm._s(entry[\"cache.gets.miss\"])),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            entry[\"cache.gets.hit\"] + entry[\"cache.gets.miss\"]\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(_vm._s(entry[\"cache.puts\"])),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(_vm._s(entry[\"cache.removals\"])),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(_vm._s(entry[\"cache.evictions\"])),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          \"\\n            \" +\n                            _vm._s(\n                              _vm.formatNumber2(\n                                _vm.filterNaN(\n                                  (100 * entry[\"cache.gets.hit\"]) /\n                                    (entry[\"cache.gets.hit\"] +\n                                      entry[\"cache.gets.miss\"])\n                                )\n                              )\n                            ) +\n                            \"\\n          \"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", { staticClass: \"text-right\" }, [\n                        _vm._v(\n                          \"\\n            \" +\n                            _vm._s(\n                              _vm.formatNumber2(\n                                _vm.filterNaN(\n                                  (100 * entry[\"cache.gets.miss\"]) /\n                                    (entry[\"cache.gets.hit\"] +\n                                      entry[\"cache.gets.miss\"])\n                                )\n                              )\n                            ) +\n                            \"\\n          \"\n                        ),\n                      ]),\n                    ])\n                  }),\n                  0\n                ),\n              ]\n            ),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        {\n          domProps: { textContent: _vm._s(_vm.$t(\"metrics.datasource.title\")) },\n        },\n        [_vm._v(\"DataSource statistics (time in millisecond)\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics &&\n      _vm.isObjectExistingAndNotEmpty(_vm.metrics, \"databases\")\n        ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\n              \"table\",\n              {\n                staticClass: \"table table-striped\",\n                attrs: { \"aria-describedby\": \"Connection pool\" },\n              },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\"th\", { attrs: { scope: \"col\" } }, [\n                      _c(\n                        \"span\",\n                        {\n                          domProps: {\n                            textContent: _vm._s(\n                              _vm.$t(\"metrics.datasource.usage\")\n                            ),\n                          },\n                        },\n                        [_vm._v(\"Connection Pool Usage\")]\n                      ),\n                      _vm._v(\n                        \" (active: \" +\n                          _vm._s(_vm.metrics.databases.active.value) +\n                          \", min:\\n            \" +\n                          _vm._s(_vm.metrics.databases.min.value) +\n                          \", max: \" +\n                          _vm._s(_vm.metrics.databases.max.value) +\n                          \", idle: \" +\n                          _vm._s(_vm.metrics.databases.idle.value) +\n                          \")\\n          \"\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.datasource.count\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Count\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.datasource.mean\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Mean\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.min\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"Min\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.p50\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"p50\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.p75\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"p75\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.p95\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"p95\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.p99\")\n                          ),\n                        },\n                      },\n                      [_vm._v(\"p99\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        attrs: { scope: \"col\" },\n                        domProps: {\n                          textContent: _vm._s(_vm.$t(\"metrics.datasource.max\")),\n                        },\n                      },\n                      [_vm._v(\"Max\")]\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"tbody\", [\n                  _c(\"tr\", [\n                    _c(\"td\", [_vm._v(\"Acquire\")]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(_vm._s(_vm.metrics.databases.acquire.count)),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.filterNaN(_vm.metrics.databases.acquire.mean)\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.acquire[\"0.0\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.acquire[\"0.5\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.acquire[\"0.75\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.acquire[\"0.95\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.acquire[\"0.99\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.filterNaN(_vm.metrics.databases.acquire.max)\n                          )\n                        )\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", [_vm._v(\"Creation\")]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(_vm._s(_vm.metrics.databases.creation.count)),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.filterNaN(_vm.metrics.databases.creation.mean)\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.creation[\"0.0\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.creation[\"0.5\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.creation[\"0.75\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.creation[\"0.95\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.databases.creation[\"0.99\"]\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.filterNaN(_vm.metrics.databases.creation.max)\n                          )\n                        )\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", [_vm._v(\"Usage\")]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(_vm._s(_vm.metrics.databases.usage.count)),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.filterNaN(_vm.metrics.databases.usage.mean)\n                          )\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(_vm.metrics.databases.usage[\"0.0\"])\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(_vm.metrics.databases.usage[\"0.5\"])\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(_vm.metrics.databases.usage[\"0.75\"])\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(_vm.metrics.databases.usage[\"0.95\"])\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(_vm.metrics.databases.usage[\"0.99\"])\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.filterNaN(_vm.metrics.databases.usage.max)\n                          )\n                        )\n                      ),\n                    ]),\n                  ]),\n                ]),\n              ]\n            ),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"b-modal\",\n        { ref: \"metricsModal\", attrs: { size: \"lg\" } },\n        [\n          _c(\n            \"h4\",\n            {\n              staticClass: \"modal-title\",\n              attrs: { slot: \"modal-title\", id: \"showMetricsLabel\" },\n              domProps: {\n                textContent: _vm._s(_vm.$t(\"metrics.jvm.threads.dump.title\")),\n              },\n              slot: \"modal-title\",\n            },\n            [_vm._v(\"Threads dump\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"metrics-modal\", { attrs: { \"thread-dump\": _vm.threadData } }),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", [\n      _c(\"tr\", [\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Method\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Endpoint url\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { staticClass: \"text-right\", attrs: { scope: \"col\" } }, [\n          _vm._v(\"Count\"),\n        ]),\n        _vm._v(\" \"),\n        _c(\"th\", { staticClass: \"text-right\", attrs: { scope: \"col\" } }, [\n          _vm._v(\"Mean\"),\n        ]),\n      ]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAIA;;AAsCA;AApCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAvCA;AADA;;AACA;AAFA;AAHA;AACA;AACA;AACA;AA0CA;AAAA;AA1CA;;;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AA6GA;AAziHA;AAAA;AAjHA;;;A;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;;;ACtsourceRoot":""}