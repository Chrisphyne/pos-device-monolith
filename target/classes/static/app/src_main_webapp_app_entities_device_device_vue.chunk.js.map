{"version":3,"file":"app/src_main_webapp_app_entities_device_device_vue.chunk.js","sources":["webpack://posdevicerestapi/./src/main/webapp/app/entities/device/device.component.ts","webpack://posdevicerestapi/./src/main/webapp/app/shared/data/data-utils.service.ts","webpack://posdevicerestapi/./src/main/webapp/app/entities/device/device.vue","webpack://posdevicerestapi/./src/main/webapp/app/entities/device/device.component.ts?2784","webpack://posdevicerestapi/./src/main/webapp/app/entities/device/device.vue?1150"],"sourcesContent":["import { mixins } from 'vue-class-component';\n\nimport { Component, Vue, Inject } from 'vue-property-decorator';\nimport Vue2Filters from 'vue2-filters';\nimport { IDevice } from '@/shared/model/device.model';\n\nimport JhiDataUtils from '@/shared/data/data-utils.service';\n\nimport DeviceService from './device.service';\n\n@Component({\n  mixins: [Vue2Filters.mixin],\n})\nexport default class Device extends mixins(JhiDataUtils) {\n  @Inject('deviceService') private deviceService: () => DeviceService;\n  private removeId: number = null;\n  public itemsPerPage = 20;\n  public queryCount: number = null;\n  public page = 1;\n  public previousPage = 1;\n  public propOrder = 'id';\n  public reverse = false;\n  public totalItems = 0;\n\n  public devices: IDevice[] = [];\n\n  public isFetching = false;\n\n  public mounted(): void {\n    this.retrieveAllDevices();\n  }\n\n  public clear(): void {\n    this.page = 1;\n    this.retrieveAllDevices();\n  }\n\n  public retrieveAllDevices(): void {\n    this.isFetching = true;\n\n    const paginationQuery = {\n      page: this.page - 1,\n      size: this.itemsPerPage,\n      sort: this.sort(),\n    };\n    this.deviceService()\n      .retrieve(paginationQuery)\n      .then(\n        res => {\n          this.devices = res.data;\n          this.totalItems = Number(res.headers['x-total-count']);\n          this.queryCount = this.totalItems;\n          this.isFetching = false;\n        },\n        err => {\n          this.isFetching = false;\n        }\n      );\n  }\n\n  public handleSyncList(): void {\n    this.clear();\n  }\n\n  public prepareRemove(instance: IDevice): void {\n    this.removeId = instance.id;\n    if (<any>this.$refs.removeEntity) {\n      (<any>this.$refs.removeEntity).show();\n    }\n  }\n\n  public removeDevice(): void {\n    this.deviceService()\n      .delete(this.removeId)\n      .then(() => {\n        const message = this.$t('posdevicerestapiApp.device.deleted', { param: this.removeId });\n        this.$bvToast.toast(message.toString(), {\n          toaster: 'b-toaster-top-center',\n          title: 'Info',\n          variant: 'danger',\n          solid: true,\n          autoHideDelay: 5000,\n        });\n        this.removeId = null;\n        this.retrieveAllDevices();\n        this.closeDialog();\n      });\n  }\n\n  public sort(): Array<any> {\n    const result = [this.propOrder + ',' + (this.reverse ? 'desc' : 'asc')];\n    if (this.propOrder !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  public loadPage(page: number): void {\n    if (page !== this.previousPage) {\n      this.previousPage = page;\n      this.transition();\n    }\n  }\n\n  public transition(): void {\n    this.retrieveAllDevices();\n  }\n\n  public changeOrder(propOrder): void {\n    this.propOrder = propOrder;\n    this.reverse = !this.reverse;\n    this.transition();\n  }\n\n  public closeDialog(): void {\n    (<any>this.$refs.removeEntity).hide();\n  }\n}\n","import { Component, Vue } from 'vue-property-decorator';\n\n/**\n * An utility service for data.\n */\n@Component\nexport default class JhiDataUtils extends Vue {\n  /**\n   * Method to abbreviate the text given\n   */\n  abbreviate(text, append = '...') {\n    if (text.length < 30) {\n      return text;\n    }\n    return text ? text.substring(0, 15) + append + text.slice(-10) : '';\n  }\n\n  /**\n   * Method to find the byte size of the string provides\n   */\n  byteSize(base64String) {\n    return this.formatAsBytes(this.size(base64String));\n  }\n\n  /**\n   * Method to open file\n   */\n  openFile(contentType, data) {\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      // To support IE and Edge\n      const byteCharacters = atob(data);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      const blob = new Blob([byteArray], {\n        type: contentType,\n      });\n      window.navigator.msSaveOrOpenBlob(blob);\n    } else {\n      // Other browsers\n      const fileURL = `data:${contentType};base64,${data}`;\n      const win = window.open();\n      win.document.write(\n        '<iframe src=\"' +\n          fileURL +\n          '\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>'\n      );\n    }\n  }\n\n  /**\n   * Method to convert the file to base64\n   */\n  toBase64(file, cb) {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n    fileReader.onload = (e: any) => {\n      const base64Data = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n      cb(base64Data);\n    };\n  }\n\n  /**\n   * Method to clear the input\n   */\n  clearInputImage(entity, elementRef, field, fieldContentType, idInput) {\n    if (entity && field && fieldContentType) {\n      if (Object.prototype.hasOwnProperty.call(entity, field)) {\n        entity[field] = null;\n      }\n      if (Object.prototype.hasOwnProperty.call(entity, fieldContentType)) {\n        entity[fieldContentType] = null;\n      }\n      if (elementRef && idInput && elementRef.nativeElement.querySelector('#' + idInput)) {\n        elementRef.nativeElement.querySelector('#' + idInput).value = null;\n      }\n    }\n  }\n\n  endsWith(suffix, str) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n  }\n\n  paddingSize(value) {\n    if (this.endsWith('==', value)) {\n      return 2;\n    }\n    if (this.endsWith('=', value)) {\n      return 1;\n    }\n    return 0;\n  }\n\n  size(value) {\n    return (value.length / 4) * 3 - this.paddingSize(value);\n  }\n\n  formatAsBytes(size) {\n    return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n  }\n\n  setFileData(event, entity, field, isImage) {\n    if (event && event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      if (isImage && !/^image\\//.test(file.type)) {\n        return;\n      }\n      this.toBase64(file, base64Data => {\n        entity[field] = base64Data;\n        entity[`${field}ContentType`] = file.type;\n      });\n    }\n  }\n\n  /**\n   * Method to download file\n   */\n  downloadFile(contentType, data, fileName) {\n    const byteCharacters = atob(data);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], {\n      type: contentType,\n    });\n    const tempLink = document.createElement('a');\n    tempLink.href = window.URL.createObjectURL(blob);\n    tempLink.download = fileName;\n    tempLink.target = '_blank';\n    tempLink.click();\n  }\n\n  /**\n   * Method to parse header links\n   */\n  parseLinks(header) {\n    const links = {};\n\n    if (header === null || header.indexOf(',') === -1) {\n      return links;\n    }\n    // Split parts by comma\n    const parts = header.split(',');\n\n    // Parse each part into a named link\n    parts.forEach(p => {\n      if (p.indexOf('>;') === -1) {\n        return;\n      }\n      const section = p.split('>;');\n      const url = section[0].replace(/<(.*)/, '$1').trim();\n      const queryString = { page: null };\n      url.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), ($0, $1, $2, $3) => {\n        queryString[$1] = $3;\n      });\n      let page = queryString.page;\n      if (typeof page === 'string') {\n        page = parseInt(page, 10);\n      }\n      const name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n      links[name] = page;\n    });\n    return links;\n  }\n}\n","import { render, staticRenderFns } from \"./device.vue?vue&type=template&id=3fe08fd4&\"\nimport script from \"./device.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./device.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/chrisphyne/Documents/JhipsterApps/archive/pos-device-monolith/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3fe08fd4')) {\n      api.createRecord('3fe08fd4', component.options)\n    } else {\n      api.reload('3fe08fd4', component.options)\n    }\n    module.hot.accept(\"./device.vue?vue&type=template&id=3fe08fd4&\", function () {\n      api.rerender('3fe08fd4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/entities/device/device.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./device.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./device.component.ts?vue&type=script&lang=ts&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"h2\", { attrs: { id: \"page-heading\", \"data-cy\": \"DeviceHeading\" } }, [\n        _c(\n          \"span\",\n          {\n            attrs: { id: \"device-heading\" },\n            domProps: {\n              textContent: _vm._s(\n                _vm.$t(\"posdevicerestapiApp.device.home.title\")\n              ),\n            },\n          },\n          [_vm._v(\"Devices\")]\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"d-flex justify-content-end\" },\n          [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info mr-2\",\n                attrs: { disabled: _vm.isFetching },\n                on: { click: _vm.handleSyncList },\n              },\n              [\n                _c(\"font-awesome-icon\", {\n                  attrs: { icon: \"sync\", spin: _vm.isFetching },\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\n                          \"posdevicerestapiApp.device.home.refreshListLabel\"\n                        )\n                      ),\n                    },\n                  },\n                  [_vm._v(\"Refresh List\")]\n                ),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"router-link\", {\n              attrs: { to: { name: \"DeviceCreate\" }, custom: \"\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"default\",\n                  fn: function (ref) {\n                    var navigate = ref.navigate\n                    return [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass:\n                            \"btn btn-primary jh-create-entity create-device\",\n                          attrs: {\n                            id: \"jh-create-entity\",\n                            \"data-cy\": \"entityCreateButton\",\n                          },\n                          on: { click: navigate },\n                        },\n                        [\n                          _c(\"font-awesome-icon\", { attrs: { icon: \"plus\" } }),\n                          _vm._v(\" \"),\n                          _c(\n                            \"span\",\n                            {\n                              domProps: {\n                                textContent: _vm._s(\n                                  _vm.$t(\n                                    \"posdevicerestapiApp.device.home.createLabel\"\n                                  )\n                                ),\n                              },\n                            },\n                            [_vm._v(\" Create a new Device \")]\n                          ),\n                        ],\n                        1\n                      ),\n                    ]\n                  },\n                },\n              ]),\n            }),\n          ],\n          1\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      !_vm.isFetching && _vm.devices && _vm.devices.length === 0\n        ? _c(\"div\", { staticClass: \"alert alert-warning\" }, [\n            _c(\n              \"span\",\n              {\n                domProps: {\n                  textContent: _vm._s(\n                    _vm.$t(\"posdevicerestapiApp.device.home.notFound\")\n                  ),\n                },\n              },\n              [_vm._v(\"No devices found\")]\n            ),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.devices && _vm.devices.length > 0\n        ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\n              \"table\",\n              {\n                staticClass: \"table table-striped\",\n                attrs: { \"aria-describedby\": \"devices\" },\n              },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"row\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.changeOrder(\"id\")\n                          },\n                        },\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            domProps: {\n                              textContent: _vm._s(_vm.$t(\"global.field.id\")),\n                            },\n                          },\n                          [_vm._v(\"ID\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"jhi-sort-indicator\", {\n                          attrs: {\n                            \"current-order\": _vm.propOrder,\n                            reverse: _vm.reverse,\n                            \"field-name\": \"id\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"row\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.changeOrder(\"name\")\n                          },\n                        },\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"posdevicerestapiApp.device.name\")\n                              ),\n                            },\n                          },\n                          [_vm._v(\"Name\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"jhi-sort-indicator\", {\n                          attrs: {\n                            \"current-order\": _vm.propOrder,\n                            reverse: _vm.reverse,\n                            \"field-name\": \"name\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"row\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.changeOrder(\"description\")\n                          },\n                        },\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"posdevicerestapiApp.device.description\")\n                              ),\n                            },\n                          },\n                          [_vm._v(\"Description\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"jhi-sort-indicator\", {\n                          attrs: {\n                            \"current-order\": _vm.propOrder,\n                            reverse: _vm.reverse,\n                            \"field-name\": \"description\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"row\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.changeOrder(\"price\")\n                          },\n                        },\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"posdevicerestapiApp.device.price\")\n                              ),\n                            },\n                          },\n                          [_vm._v(\"Price\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"jhi-sort-indicator\", {\n                          attrs: {\n                            \"current-order\": _vm.propOrder,\n                            reverse: _vm.reverse,\n                            \"field-name\": \"price\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"row\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.changeOrder(\"deviceSize\")\n                          },\n                        },\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"posdevicerestapiApp.device.deviceSize\")\n                              ),\n                            },\n                          },\n                          [_vm._v(\"Device Size\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"jhi-sort-indicator\", {\n                          attrs: {\n                            \"current-order\": _vm.propOrder,\n                            reverse: _vm.reverse,\n                            \"field-name\": \"deviceSize\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"row\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.changeOrder(\"image\")\n                          },\n                        },\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"posdevicerestapiApp.device.image\")\n                              ),\n                            },\n                          },\n                          [_vm._v(\"Image\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"jhi-sort-indicator\", {\n                          attrs: {\n                            \"current-order\": _vm.propOrder,\n                            reverse: _vm.reverse,\n                            \"field-name\": \"image\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        attrs: { scope: \"row\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.changeOrder(\"deviceModel.name\")\n                          },\n                        },\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"posdevicerestapiApp.device.deviceModel\")\n                              ),\n                            },\n                          },\n                          [_vm._v(\"Device Model\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"jhi-sort-indicator\", {\n                          attrs: {\n                            \"current-order\": _vm.propOrder,\n                            reverse: _vm.reverse,\n                            \"field-name\": \"deviceModel.name\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"th\", { attrs: { scope: \"row\" } }),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"tbody\",\n                  _vm._l(_vm.devices, function (device) {\n                    return _c(\n                      \"tr\",\n                      { key: device.id, attrs: { \"data-cy\": \"entityTable\" } },\n                      [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"router-link\",\n                              {\n                                attrs: {\n                                  to: {\n                                    name: \"DeviceView\",\n                                    params: { deviceId: device.id },\n                                  },\n                                },\n                              },\n                              [_vm._v(_vm._s(device.id))]\n                            ),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(device.name))]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(device.description))]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(device.price))]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"td\",\n                          {\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"posdevicerestapiApp.Size.\" +\n                                    device.deviceSize\n                                )\n                              ),\n                            },\n                          },\n                          [_vm._v(_vm._s(device.deviceSize))]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          device.image\n                            ? _c(\n                                \"a\",\n                                {\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.openFile(\n                                        device.imageContentType,\n                                        device.image\n                                      )\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"img\", {\n                                    staticStyle: { \"max-height\": \"30px\" },\n                                    attrs: {\n                                      src:\n                                        \"data:\" +\n                                        device.imageContentType +\n                                        \";base64,\" +\n                                        device.image,\n                                      alt: \"device image\",\n                                    },\n                                  }),\n                                ]\n                              )\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          device.image\n                            ? _c(\"span\", [\n                                _vm._v(\n                                  _vm._s(device.imageContentType) +\n                                    \", \" +\n                                    _vm._s(_vm.byteSize(device.image))\n                                ),\n                              ])\n                            : _vm._e(),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          device.deviceModel\n                            ? _c(\n                                \"div\",\n                                [\n                                  _c(\n                                    \"router-link\",\n                                    {\n                                      attrs: {\n                                        to: {\n                                          name: \"DeviceModelView\",\n                                          params: {\n                                            deviceModelId:\n                                              device.deviceModel.id,\n                                          },\n                                        },\n                                      },\n                                    },\n                                    [_vm._v(_vm._s(device.deviceModel.name))]\n                                  ),\n                                ],\n                                1\n                              )\n                            : _vm._e(),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", { staticClass: \"text-right\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"btn-group\" },\n                            [\n                              _c(\"router-link\", {\n                                attrs: {\n                                  to: {\n                                    name: \"DeviceView\",\n                                    params: { deviceId: device.id },\n                                  },\n                                  custom: \"\",\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function (ref) {\n                                        var navigate = ref.navigate\n                                        return [\n                                          _c(\n                                            \"button\",\n                                            {\n                                              staticClass:\n                                                \"btn btn-info btn-sm details\",\n                                              attrs: {\n                                                \"data-cy\":\n                                                  \"entityDetailsButton\",\n                                              },\n                                              on: { click: navigate },\n                                            },\n                                            [\n                                              _c(\"font-awesome-icon\", {\n                                                attrs: { icon: \"eye\" },\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"span\",\n                                                {\n                                                  staticClass:\n                                                    \"d-none d-md-inline\",\n                                                  domProps: {\n                                                    textContent: _vm._s(\n                                                      _vm.$t(\n                                                        \"entity.action.view\"\n                                                      )\n                                                    ),\n                                                  },\n                                                },\n                                                [_vm._v(\"View\")]\n                                              ),\n                                            ],\n                                            1\n                                          ),\n                                        ]\n                                      },\n                                    },\n                                  ],\n                                  null,\n                                  true\n                                ),\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"router-link\", {\n                                attrs: {\n                                  to: {\n                                    name: \"DeviceEdit\",\n                                    params: { deviceId: device.id },\n                                  },\n                                  custom: \"\",\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function (ref) {\n                                        var navigate = ref.navigate\n                                        return [\n                                          _c(\n                                            \"button\",\n                                            {\n                                              staticClass:\n                                                \"btn btn-primary btn-sm edit\",\n                                              attrs: {\n                                                \"data-cy\": \"entityEditButton\",\n                                              },\n                                              on: { click: navigate },\n                                            },\n                                            [\n                                              _c(\"font-awesome-icon\", {\n                                                attrs: { icon: \"pencil-alt\" },\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"span\",\n                                                {\n                                                  staticClass:\n                                                    \"d-none d-md-inline\",\n                                                  domProps: {\n                                                    textContent: _vm._s(\n                                                      _vm.$t(\n                                                        \"entity.action.edit\"\n                                                      )\n                                                    ),\n                                                  },\n                                                },\n                                                [_vm._v(\"Edit\")]\n                                              ),\n                                            ],\n                                            1\n                                          ),\n                                        ]\n                                      },\n                                    },\n                                  ],\n                                  null,\n                                  true\n                                ),\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"b-button\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"b-modal\",\n                                      rawName: \"v-b-modal.removeEntity\",\n                                      modifiers: { removeEntity: true },\n                                    },\n                                  ],\n                                  staticClass: \"btn btn-sm\",\n                                  attrs: {\n                                    variant: \"danger\",\n                                    \"data-cy\": \"entityDeleteButton\",\n                                  },\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.prepareRemove(device)\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"font-awesome-icon\", {\n                                    attrs: { icon: \"times\" },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"span\",\n                                    {\n                                      staticClass: \"d-none d-md-inline\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\"entity.action.delete\")\n                                        ),\n                                      },\n                                    },\n                                    [_vm._v(\"Delete\")]\n                                  ),\n                                ],\n                                1\n                              ),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]\n                    )\n                  }),\n                  0\n                ),\n              ]\n            ),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"b-modal\", { ref: \"removeEntity\", attrs: { id: \"removeEntity\" } }, [\n        _c(\"span\", { attrs: { slot: \"modal-title\" }, slot: \"modal-title\" }, [\n          _c(\n            \"span\",\n            {\n              attrs: {\n                id: \"posdevicerestapiApp.device.delete.question\",\n                \"data-cy\": \"deviceDeleteDialogHeading\",\n              },\n              domProps: { textContent: _vm._s(_vm.$t(\"entity.delete.title\")) },\n            },\n            [_vm._v(\"Confirm delete operation\")]\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"modal-body\" }, [\n          _c(\n            \"p\",\n            {\n              attrs: { id: \"jhi-delete-device-heading\" },\n              domProps: {\n                textContent: _vm._s(\n                  _vm.$t(\"posdevicerestapiApp.device.delete.question\", {\n                    id: _vm.removeId,\n                  })\n                ),\n              },\n            },\n            [\n              _vm._v(\n                \"\\n        Are you sure you want to delete this Device?\\n      \"\n              ),\n            ]\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { attrs: { slot: \"modal-footer\" }, slot: \"modal-footer\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-secondary\",\n              attrs: { type: \"button\" },\n              domProps: { textContent: _vm._s(_vm.$t(\"entity.action.cancel\")) },\n              on: {\n                click: function ($event) {\n                  return _vm.closeDialog()\n                },\n              },\n            },\n            [_vm._v(\"Cancel\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-primary\",\n              attrs: {\n                type: \"button\",\n                id: \"jhi-confirm-delete-device\",\n                \"data-cy\": \"entityConfirmDeleteButton\",\n              },\n              domProps: { textContent: _vm._s(_vm.$t(\"entity.action.delete\")) },\n              on: {\n                click: function ($event) {\n                  return _vm.removeDevice()\n                },\n              },\n            },\n            [_vm._v(\"\\n        Delete\\n      \")]\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.devices && _vm.devices.length > 0,\n              expression: \"devices && devices.length > 0\",\n            },\n          ],\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"row justify-content-center\" },\n            [\n              _c(\"jhi-item-count\", {\n                attrs: {\n                  page: _vm.page,\n                  total: _vm.queryCount,\n                  itemsPerPage: _vm.itemsPerPage,\n                },\n              }),\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"row justify-content-center\" },\n            [\n              _c(\"b-pagination\", {\n                attrs: {\n                  size: \"md\",\n                  \"total-rows\": _vm.totalItems,\n                  \"per-page\": _vm.itemsPerPage,\n                  change: _vm.loadPage(_vm.page),\n                },\n                model: {\n                  value: _vm.page,\n                  callback: function ($$v) {\n                    _vm.page = $$v\n                  },\n                  expression: \"page\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAGA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AA2FA;AAzFA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAtGA;AAAA;;AAAA;AADA;AAHA;AACA;AACA;AACA;AAwGA;AAAA;AAxGA;;;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAEA;;AAEA;AAEA;AAAA;AAAA;;AAkKA;AAjKA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjKA;AADA;AACA;AAkKA;AAAA;AAlKA;;;A;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;;;ACtsourceRoot":""}