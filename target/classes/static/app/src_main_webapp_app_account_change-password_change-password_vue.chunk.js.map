{"version":3,"file":"app/src_main_webapp_app_account_change-password_change-password_vue.chunk.js","sources":["webpack://posdevicerestapi/./src/main/webapp/app/account/change-password/change-password.component.ts","webpack://posdevicerestapi/./src/main/webapp/app/account/change-password/change-password.vue","webpack://posdevicerestapi/./src/main/webapp/app/account/change-password/change-password.component.ts?a3e0","webpack://posdevicerestapi/./src/main/webapp/app/account/change-password/change-password.vue?f682"],"sourcesContent":["import { maxLength, minLength, required, sameAs } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nimport Component from 'vue-class-component';\nimport { Vue } from 'vue-property-decorator';\n\nconst validations = {\n  resetPassword: {\n    currentPassword: {\n      required,\n    },\n    newPassword: {\n      required,\n      minLength: minLength(4),\n      maxLength: maxLength(254),\n    },\n    confirmPassword: {\n      // prettier-ignore\n      sameAsPassword: sameAs(vm => {\n      return vm.newPassword;\n      }),\n    },\n  },\n};\n\n@Component({\n  validations,\n  computed: {\n    ...mapGetters(['account']),\n  },\n})\nexport default class ChangePassword extends Vue {\n  success: string = null;\n  error: string = null;\n  doNotMatch: string = null;\n  resetPassword: any = {\n    currentPassword: null,\n    newPassword: null,\n    confirmPassword: null,\n  };\n\n  public changePassword(): void {\n    if (this.resetPassword.newPassword !== this.resetPassword.confirmPassword) {\n      this.error = null;\n      this.success = null;\n      this.doNotMatch = 'ERROR';\n    } else {\n      this.doNotMatch = null;\n      axios\n        .post('api/account/change-password', {\n          currentPassword: this.resetPassword.currentPassword,\n          newPassword: this.resetPassword.newPassword,\n        })\n        .then(() => {\n          this.success = 'OK';\n          this.error = null;\n        })\n        .catch(() => {\n          this.success = null;\n          this.error = 'ERROR';\n        });\n    }\n  }\n\n  public get username(): string {\n    return this.$store.getters.account ? this.$store.getters.account.login : '';\n  }\n}\n","import { render, staticRenderFns } from \"./change-password.vue?vue&type=template&id=22a31d5c&\"\nimport script from \"./change-password.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./change-password.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/chrisphyne/Documents/JhipsterApps/archive/pos-device-monolith/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('22a31d5c')) {\n      api.createRecord('22a31d5c', component.options)\n    } else {\n      api.reload('22a31d5c', component.options)\n    }\n    module.hot.accept(\"./change-password.vue?vue&type=template&id=22a31d5c&\", function () {\n      api.rerender('22a31d5c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/account/change-password/change-password.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./change-password.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./change-password.component.ts?vue&type=script&lang=ts&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8 toastify-container\" }, [\n        _vm.account\n          ? _c(\"h2\", { attrs: { id: \"password-title\" } }, [\n              _c(\n                \"span\",\n                {\n                  domProps: {\n                    innerHTML: _vm._s(\n                      _vm.$t(\"password.title\", { username: _vm.username })\n                    ),\n                  },\n                },\n                [\n                  _vm._v(\"\\n          Password for [\"),\n                  _c(\"strong\", [_vm._v(_vm._s(_vm.username))]),\n                  _vm._v(\"]\"),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.success\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-success\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"password.messages.success\")),\n                },\n              },\n              [_c(\"strong\", [_vm._v(\"Password changed!\")])]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.error\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"password.messages.error\")),\n                },\n              },\n              [\n                _c(\"strong\", [_vm._v(\"An error has occurred!\")]),\n                _vm._v(\" The password could not be changed.\\n      \"),\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.doNotMatch\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  textContent: _vm._s(\n                    _vm.$t(\"global.messages.error.dontmatch\")\n                  ),\n                },\n              },\n              [\n                _vm._v(\n                  \"\\n        The password and its confirmation do not match!\\n      \"\n                ),\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"form\",\n          {\n            attrs: { name: \"form\", role: \"form\", id: \"password-form\" },\n            on: {\n              submit: function ($event) {\n                $event.preventDefault()\n                return _vm.changePassword()\n              },\n            },\n          },\n          [\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"form-control-label\",\n                  attrs: { for: \"currentPassword\" },\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.form['currentpassword.label']\")\n                    ),\n                  },\n                },\n                [_vm._v(\"Current password\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.$v.resetPassword.currentPassword.$model,\n                    expression: \"$v.resetPassword.currentPassword.$model\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                class: {\n                  valid: !_vm.$v.resetPassword.currentPassword.$invalid,\n                  invalid: _vm.$v.resetPassword.currentPassword.$invalid,\n                },\n                attrs: {\n                  type: \"password\",\n                  id: \"currentPassword\",\n                  name: \"currentPassword\",\n                  placeholder: _vm.$t(\n                    \"global.form['currentpassword.placeholder']\"\n                  ),\n                  required: \"\",\n                  \"data-cy\": \"currentPassword\",\n                },\n                domProps: {\n                  value: _vm.$v.resetPassword.currentPassword.$model,\n                },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.$v.resetPassword.currentPassword,\n                      \"$model\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _vm.$v.resetPassword.currentPassword.$anyDirty &&\n              _vm.$v.resetPassword.currentPassword.$invalid\n                ? _c(\"div\", [\n                    !_vm.$v.resetPassword.currentPassword.required\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"global.messages.validate.newpassword.required\"\n                                )\n                              ),\n                            },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              Your password is required.\\n            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ])\n                : _vm._e(),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"form-control-label\",\n                  attrs: { for: \"newPassword\" },\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.form['newpassword.label']\")\n                    ),\n                  },\n                },\n                [_vm._v(\"New password\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.$v.resetPassword.newPassword.$model,\n                    expression: \"$v.resetPassword.newPassword.$model\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                class: {\n                  valid: !_vm.$v.resetPassword.newPassword.$invalid,\n                  invalid: _vm.$v.resetPassword.newPassword.$invalid,\n                },\n                attrs: {\n                  type: \"password\",\n                  id: \"newPassword\",\n                  name: \"newPassword\",\n                  placeholder: _vm.$t(\"global.form['newpassword.placeholder']\"),\n                  minlength: \"4\",\n                  maxlength: \"50\",\n                  required: \"\",\n                  \"data-cy\": \"newPassword\",\n                },\n                domProps: { value: _vm.$v.resetPassword.newPassword.$model },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.$v.resetPassword.newPassword,\n                      \"$model\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _vm.$v.resetPassword.newPassword.$anyDirty &&\n              _vm.$v.resetPassword.newPassword.$invalid\n                ? _c(\"div\", [\n                    !_vm.$v.resetPassword.newPassword.required\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"global.messages.validate.newpassword.required\"\n                                )\n                              ),\n                            },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              Your password is required.\\n            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    !_vm.$v.resetPassword.newPassword.minLength\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"global.messages.validate.newpassword.minlength\"\n                                )\n                              ),\n                            },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              Your password is required to be at least 4 characters.\\n            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    !_vm.$v.resetPassword.newPassword.maxLength\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"global.messages.validate.newpassword.maxlength\"\n                                )\n                              ),\n                            },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              Your password cannot be longer than 50 characters.\\n            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ])\n                : _vm._e(),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"form-control-label\",\n                  attrs: { for: \"confirmPassword\" },\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.form['confirmpassword.label']\")\n                    ),\n                  },\n                },\n                [_vm._v(\"New password confirmation\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.$v.resetPassword.confirmPassword.$model,\n                    expression: \"$v.resetPassword.confirmPassword.$model\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                class: {\n                  valid: !_vm.$v.resetPassword.confirmPassword.$invalid,\n                  invalid: _vm.$v.resetPassword.confirmPassword.$invalid,\n                },\n                attrs: {\n                  type: \"password\",\n                  id: \"confirmPassword\",\n                  name: \"confirmPassword\",\n                  placeholder: _vm.$t(\n                    \"global.form['confirmpassword.placeholder']\"\n                  ),\n                  minlength: \"4\",\n                  maxlength: \"50\",\n                  required: \"\",\n                  \"data-cy\": \"confirmPassword\",\n                },\n                domProps: {\n                  value: _vm.$v.resetPassword.confirmPassword.$model,\n                },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.$v.resetPassword.confirmPassword,\n                      \"$model\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _vm.$v.resetPassword.confirmPassword.$anyDirty &&\n              _vm.$v.resetPassword.confirmPassword.$invalid\n                ? _c(\"div\", [\n                    !_vm.$v.resetAccount.confirmPassword.sameAsPassword\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"global.messages.error.dontmatch\")\n                              ),\n                            },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              The password and its confirmation do not match!\\n            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ])\n                : _vm._e(),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-primary\",\n                attrs: {\n                  type: \"submit\",\n                  disabled: _vm.$v.resetPassword.$invalid,\n                  \"data-cy\": \"submit\",\n                },\n                domProps: {\n                  textContent: _vm._s(_vm.$t(\"password.form.button\")),\n                },\n              },\n              [_vm._v(\"\\n          Save\\n        \")]\n            ),\n          ]\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA4BA;AA1BA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA,6DACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;;;AAAA;AAnCA;AANA;AACA;AACA;AAGA;AACA;AAoCA;AAAA;AApCA;;;A;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;;;ACtsourceRoot":""}