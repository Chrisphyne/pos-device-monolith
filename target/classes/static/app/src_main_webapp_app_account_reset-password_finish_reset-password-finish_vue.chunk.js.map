{"version":3,"file":"app/src_main_webapp_app_account_reset-password_finish_reset-password-finish_vue.chunk.js","sources":["webpack://posdevicerestapi/./src/main/webapp/app/account/reset-password/finish/reset-password-finish.component.ts","webpack://posdevicerestapi/./src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue","webpack://posdevicerestapi/./src/main/webapp/app/account/reset-password/finish/reset-password-finish.component.ts?b53c","webpack://posdevicerestapi/./src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue?d4b9"],"sourcesContent":["import axios from 'axios';\nimport { maxLength, minLength, required, sameAs } from 'vuelidate/lib/validators';\nimport { Inject, Vue, Component } from 'vue-property-decorator';\nimport LoginService from '@/account/login.service';\n\nconst validations = {\n  resetAccount: {\n    newPassword: {\n      required,\n      minLength: minLength(4),\n      maxLength: maxLength(254),\n    },\n    confirmPassword: {\n      // prettier-ignore\n      sameAsPassword: sameAs(vm => {\n      return vm.newPassword;\n      }),\n    },\n  },\n};\n\n@Component({\n  validations,\n})\nexport default class ResetPasswordFinish extends Vue {\n  @Inject('loginService')\n  private loginService: () => LoginService;\n\n  public doNotMatch: string = null;\n  public success: string = null;\n  public error: string = null;\n  public keyMissing: boolean = null;\n  public key: any;\n  public resetAccount: any = {\n    newPassword: null,\n    confirmPassword: null,\n  };\n\n  created(): void {\n    if (this.$route !== undefined && this.$route.query !== undefined && this.$route.query.key !== undefined) {\n      this.key = this.$route.query.key;\n    }\n    this.keyMissing = !this.key;\n  }\n\n  public finishReset(): void {\n    this.doNotMatch = null;\n    this.success = null;\n    this.error = null;\n    if (this.resetAccount.newPassword !== this.resetAccount.confirmPassword) {\n      this.doNotMatch = 'ERROR';\n    } else {\n      axios\n        .post('api/account/reset-password/finish', { key: this.key, newPassword: this.resetAccount.newPassword })\n        .then(() => {\n          this.success = 'OK';\n        })\n        .catch(() => {\n          this.success = null;\n          this.error = 'ERROR';\n        });\n    }\n  }\n\n  public openLogin() {\n    this.loginService().openLogin((<any>this).$root);\n  }\n}\n","import { render, staticRenderFns } from \"./reset-password-finish.vue?vue&type=template&id=237f90bc&\"\nimport script from \"./reset-password-finish.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./reset-password-finish.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/chrisphyne/Documents/JhipsterApps/archive/pos-device-monolith/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('237f90bc')) {\n      api.createRecord('237f90bc', component.options)\n    } else {\n      api.reload('237f90bc', component.options)\n    }\n    module.hot.accept(\"./reset-password-finish.vue?vue&type=template&id=237f90bc&\", function () {\n      api.rerender('237f90bc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue\"\nexport default component.exports","import mod from \"-!../../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./reset-password-finish.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./reset-password-finish.component.ts?vue&type=script&lang=ts&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8\" }, [\n        _c(\n          \"h1\",\n          { domProps: { textContent: _vm._s(_vm.$t(\"reset.request.title\")) } },\n          [_vm._v(\"Reset your password\")]\n        ),\n        _vm._v(\" \"),\n        _vm.keyMissing\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"reset.finish.messages.keymissing\")),\n                },\n              },\n              [_c(\"strong\", [_vm._v(\"The password reset key is missing.\")])]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.error\n          ? _c(\"div\", { staticClass: \"alert alert-danger\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"reset.finish.messages.error\")),\n                  },\n                },\n                [\n                  _vm._v(\n                    \"\\n          Your password couldn't be reset. Remember a password request is only valid for 24 hours.\\n        \"\n                  ),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.success\n          ? _c(\"div\", { staticClass: \"alert alert-success\" }, [\n              _c(\n                \"span\",\n                {\n                  domProps: {\n                    innerHTML: _vm._s(_vm.$t(\"reset.finish.messages.success\")),\n                  },\n                },\n                [\n                  _c(\"strong\", [_vm._v(\"Your password had been reset.\")]),\n                  _vm._v(\" Please \"),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"a\",\n                {\n                  staticClass: \"alert-link\",\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.messages.info.authenticated.link\")\n                    ),\n                  },\n                  on: { click: _vm.openLogin },\n                },\n                [_vm._v(\"sign in\")]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.doNotMatch\n          ? _c(\"div\", { staticClass: \"alert alert-danger\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.messages.error.dontmatch\")\n                    ),\n                  },\n                },\n                [_vm._v(\"The password and its confirmation do not match!\")]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.success && !_vm.keyMissing\n          ? _c(\"div\", { staticClass: \"alert alert-warning\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"reset.finish.messages.info\")),\n                  },\n                },\n                [_vm._v(\"Choose a new password.\")]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.keyMissing\n          ? _c(\"div\", [\n              !_vm.success\n                ? _c(\n                    \"form\",\n                    {\n                      attrs: { name: \"form\", role: \"form\" },\n                      on: {\n                        submit: function ($event) {\n                          $event.preventDefault()\n                          return _vm.finishReset()\n                        },\n                      },\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"form-control-label\",\n                            attrs: { for: \"newPassword\" },\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"global.form['newpassword.label']\")\n                              ),\n                            },\n                          },\n                          [_vm._v(\"New password\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.$v.resetAccount.newPassword.$model,\n                              expression: \"$v.resetAccount.newPassword.$model\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          class: {\n                            valid: !_vm.$v.resetAccount.newPassword.$invalid,\n                            invalid: _vm.$v.resetAccount.newPassword.$invalid,\n                          },\n                          attrs: {\n                            type: \"password\",\n                            id: \"newPassword\",\n                            name: \"newPassword\",\n                            placeholder: _vm.$t(\n                              \"global.form['newpassword.placeholder']\"\n                            ),\n                            minlength: \"4\",\n                            maxlength: \"50\",\n                            required: \"\",\n                            \"data-cy\": \"resetPassword\",\n                          },\n                          domProps: {\n                            value: _vm.$v.resetAccount.newPassword.$model,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.$v.resetAccount.newPassword,\n                                \"$model\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _vm.$v.resetAccount.newPassword.$anyDirty &&\n                        _vm.$v.resetAccount.newPassword.$invalid\n                          ? _c(\"div\", [\n                              !_vm.$v.resetAccount.newPassword.required\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.required\"\n                                          )\n                                        ),\n                                      },\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                Your password is required.\\n              \"\n                                      ),\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !_vm.$v.resetAccount.newPassword.minLength\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.minlength\"\n                                          )\n                                        ),\n                                      },\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                Your password is required to be at least 4 characters.\\n              \"\n                                      ),\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !_vm.$v.resetAccount.newPassword.maxLength\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.maxlength\"\n                                          )\n                                        ),\n                                      },\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                Your password cannot be longer than 50 characters.\\n              \"\n                                      ),\n                                    ]\n                                  )\n                                : _vm._e(),\n                            ])\n                          : _vm._e(),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"form-control-label\",\n                            attrs: { for: \"confirmPassword\" },\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"global.form['confirmpassword.label']\")\n                              ),\n                            },\n                          },\n                          [_vm._v(\"New password confirmation\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.$v.resetAccount.confirmPassword.$model,\n                              expression:\n                                \"$v.resetAccount.confirmPassword.$model\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          class: {\n                            valid: !_vm.$v.resetAccount.confirmPassword\n                              .$invalid,\n                            invalid:\n                              _vm.$v.resetAccount.confirmPassword.$invalid,\n                          },\n                          attrs: {\n                            type: \"password\",\n                            id: \"confirmPassword\",\n                            name: \"confirmPassword\",\n                            placeholder: _vm.$t(\n                              \"global.form['confirmpassword.placeholder']\"\n                            ),\n                            minlength: \"4\",\n                            maxlength: \"50\",\n                            required: \"\",\n                            \"data-cy\": \"confirmResetPassword\",\n                          },\n                          domProps: {\n                            value: _vm.$v.resetAccount.confirmPassword.$model,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.$v.resetAccount.confirmPassword,\n                                \"$model\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _vm.$v.resetAccount.confirmPassword.$anyDirty &&\n                        _vm.$v.resetAccount.confirmPassword.$invalid\n                          ? _c(\"div\", [\n                              !_vm.$v.resetAccount.confirmPassword\n                                .sameAsPassword\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.error.dontmatch\"\n                                          )\n                                        ),\n                                      },\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                The password and its confirmation do not match!\\n              \"\n                                      ),\n                                    ]\n                                  )\n                                : _vm._e(),\n                            ])\n                          : _vm._e(),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-primary\",\n                          attrs: {\n                            type: \"submit\",\n                            disabled: _vm.$v.resetAccount.$invalid,\n                            \"data-cy\": \"submit\",\n                          },\n                          domProps: {\n                            textContent: _vm._s(_vm.$t(\"password.form.button\")),\n                          },\n                        },\n                        [_vm._v(\"\\n            Save\\n          \")]\n                      ),\n                    ]\n                  )\n                : _vm._e(),\n            ])\n          : _vm._e(),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA+BA;AA7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,6DACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AADA;;AACA;AAFA;AAHA;AACA;AACA;AACA;AA2CA;AAAA;AA3CA;;;A;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;;;ACtsourceRoot":""}