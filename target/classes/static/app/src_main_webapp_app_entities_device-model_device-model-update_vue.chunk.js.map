{"version":3,"file":"app/src_main_webapp_app_entities_device-model_device-model-update_vue.chunk.js","sources":["webpack://posdevicerestapi/./src/main/webapp/app/entities/device-model/device-model-update.component.ts","webpack://posdevicerestapi/./src/main/webapp/app/shared/model/device-model.model.ts","webpack://posdevicerestapi/./src/main/webapp/app/entities/device-model/device-model-update.vue","webpack://posdevicerestapi/./src/main/webapp/app/entities/device-model/device-model-update.component.ts?024f","webpack://posdevicerestapi/./src/main/webapp/app/entities/device-model/device-model-update.vue?3458"],"sourcesContent":["import { Component, Vue, Inject } from 'vue-property-decorator';\n\nimport { required } from 'vuelidate/lib/validators';\n\nimport DeviceService from '@/entities/device/device.service';\nimport { IDevice } from '@/shared/model/device.model';\n\nimport { IDeviceModel, DeviceModel } from '@/shared/model/device-model.model';\nimport DeviceModelService from './device-model.service';\n\nconst validations: any = {\n  deviceModel: {\n    name: {\n      required,\n    },\n    description: {},\n  },\n};\n\n@Component({\n  validations,\n})\nexport default class DeviceModelUpdate extends Vue {\n  @Inject('deviceModelService') private deviceModelService: () => DeviceModelService;\n  public deviceModel: IDeviceModel = new DeviceModel();\n\n  @Inject('deviceService') private deviceService: () => DeviceService;\n\n  public devices: IDevice[] = [];\n  public isSaving = false;\n  public currentLanguage = '';\n\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      if (to.params.deviceModelId) {\n        vm.retrieveDeviceModel(to.params.deviceModelId);\n      }\n      vm.initRelationships();\n    });\n  }\n\n  created(): void {\n    this.currentLanguage = this.$store.getters.currentLanguage;\n    this.$store.watch(\n      () => this.$store.getters.currentLanguage,\n      () => {\n        this.currentLanguage = this.$store.getters.currentLanguage;\n      }\n    );\n  }\n\n  public save(): void {\n    this.isSaving = true;\n    if (this.deviceModel.id) {\n      this.deviceModelService()\n        .update(this.deviceModel)\n        .then(param => {\n          this.isSaving = false;\n          this.$router.go(-1);\n          const message = this.$t('posdevicerestapiApp.deviceModel.updated', { param: param.id });\n          return this.$root.$bvToast.toast(message.toString(), {\n            toaster: 'b-toaster-top-center',\n            title: 'Info',\n            variant: 'info',\n            solid: true,\n            autoHideDelay: 5000,\n          });\n        });\n    } else {\n      this.deviceModelService()\n        .create(this.deviceModel)\n        .then(param => {\n          this.isSaving = false;\n          this.$router.go(-1);\n          const message = this.$t('posdevicerestapiApp.deviceModel.created', { param: param.id });\n          this.$root.$bvToast.toast(message.toString(), {\n            toaster: 'b-toaster-top-center',\n            title: 'Success',\n            variant: 'success',\n            solid: true,\n            autoHideDelay: 5000,\n          });\n        });\n    }\n  }\n\n  public retrieveDeviceModel(deviceModelId): void {\n    this.deviceModelService()\n      .find(deviceModelId)\n      .then(res => {\n        this.deviceModel = res;\n      });\n  }\n\n  public previousState(): void {\n    this.$router.go(-1);\n  }\n\n  public initRelationships(): void {\n    this.deviceService()\n      .retrieve()\n      .then(res => {\n        this.devices = res.data;\n      });\n  }\n}\n","import { IDevice } from '@/shared/model/device.model';\n\nexport interface IDeviceModel {\n  id?: number;\n  name?: string;\n  description?: string | null;\n  devices?: IDevice[] | null;\n}\n\nexport class DeviceModel implements IDeviceModel {\n  constructor(public id?: number, public name?: string, public description?: string | null, public devices?: IDevice[] | null) {}\n}\n","import { render, staticRenderFns } from \"./device-model-update.vue?vue&type=template&id=685d425c&\"\nimport script from \"./device-model-update.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./device-model-update.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/chrisphyne/Documents/JhipsterApps/archive/pos-device-monolith/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('685d425c')) {\n      api.createRecord('685d425c', component.options)\n    } else {\n      api.reload('685d425c', component.options)\n    }\n    module.hot.accept(\"./device-model-update.vue?vue&type=template&id=685d425c&\", function () {\n      api.rerender('685d425c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/entities/device-model/device-model-update.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./device-model-update.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./device-model-update.component.ts?vue&type=script&lang=ts&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n    _c(\"div\", { staticClass: \"col-8\" }, [\n      _c(\n        \"form\",\n        {\n          attrs: { name: \"editForm\", role: \"form\", novalidate: \"\" },\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.save()\n            },\n          },\n        },\n        [\n          _c(\n            \"h2\",\n            {\n              attrs: {\n                id: \"posdevicerestapiApp.deviceModel.home.createOrEditLabel\",\n                \"data-cy\": \"DeviceModelCreateUpdateHeading\",\n              },\n              domProps: {\n                textContent: _vm._s(\n                  _vm.$t(\n                    \"posdevicerestapiApp.deviceModel.home.createOrEditLabel\"\n                  )\n                ),\n              },\n            },\n            [_vm._v(\"\\n        Create or edit a DeviceModel\\n      \")]\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", [\n            _vm.deviceModel.id\n              ? _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    {\n                      attrs: { for: \"id\" },\n                      domProps: {\n                        textContent: _vm._s(_vm.$t(\"global.field.id\")),\n                      },\n                    },\n                    [_vm._v(\"ID\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.deviceModel.id,\n                        expression: \"deviceModel.id\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { type: \"text\", id: \"id\", name: \"id\", readonly: \"\" },\n                    domProps: { value: _vm.deviceModel.id },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.deviceModel, \"id\", $event.target.value)\n                      },\n                    },\n                  }),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"form-control-label\",\n                  attrs: { for: \"device-model-name\" },\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"posdevicerestapiApp.deviceModel.name\")\n                    ),\n                  },\n                },\n                [_vm._v(\"Name\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.$v.deviceModel.name.$model,\n                    expression: \"$v.deviceModel.name.$model\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                class: {\n                  valid: !_vm.$v.deviceModel.name.$invalid,\n                  invalid: _vm.$v.deviceModel.name.$invalid,\n                },\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  id: \"device-model-name\",\n                  \"data-cy\": \"name\",\n                  required: \"\",\n                },\n                domProps: { value: _vm.$v.deviceModel.name.$model },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.$v.deviceModel.name,\n                      \"$model\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _vm.$v.deviceModel.name.$anyDirty &&\n              _vm.$v.deviceModel.name.$invalid\n                ? _c(\"div\", [\n                    !_vm.$v.deviceModel.name.required\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"entity.validation.required\")\n                              ),\n                            },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              This field is required.\\n            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ])\n                : _vm._e(),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"form-control-label\",\n                  attrs: { for: \"device-model-description\" },\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"posdevicerestapiApp.deviceModel.description\")\n                    ),\n                  },\n                },\n                [_vm._v(\"Description\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.$v.deviceModel.description.$model,\n                    expression: \"$v.deviceModel.description.$model\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                class: {\n                  valid: !_vm.$v.deviceModel.description.$invalid,\n                  invalid: _vm.$v.deviceModel.description.$invalid,\n                },\n                attrs: {\n                  type: \"text\",\n                  name: \"description\",\n                  id: \"device-model-description\",\n                  \"data-cy\": \"description\",\n                },\n                domProps: { value: _vm.$v.deviceModel.description.$model },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.$v.deviceModel.description,\n                      \"$model\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-secondary\",\n                attrs: { type: \"button\", id: \"cancel-save\" },\n                on: {\n                  click: function ($event) {\n                    return _vm.previousState()\n                  },\n                },\n              },\n              [\n                _c(\"font-awesome-icon\", { attrs: { icon: \"ban\" } }),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"entity.action.cancel\")),\n                    },\n                  },\n                  [_vm._v(\"Cancel\")]\n                ),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-primary\",\n                attrs: {\n                  type: \"submit\",\n                  id: \"save-entity\",\n                  \"data-cy\": \"entityCreateSaveButton\",\n                  disabled: _vm.$v.deviceModel.$invalid || _vm.isSaving,\n                },\n              },\n              [\n                _c(\"font-awesome-icon\", { attrs: { icon: \"save\" } }),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"entity.action.save\")),\n                    },\n                  },\n                  [_vm._v(\"Save\")]\n                ),\n              ],\n              1\n            ),\n          ]),\n        ]\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;;AA2EA;AAzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AAJA;AAHA;AACA;AACA;AACA;AAmFA;AAAA;AAnFA;;;A;;;;;;;;;;;;;ACbA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;;;A;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;;;;;;ACtsourceRoot":""}